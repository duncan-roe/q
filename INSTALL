 Installation instructions for q
 ============ ============ === =

Q offers autoconf-style configurability without actually using autoconf.

The file "config.mak" sets default locations and features. To change from these,
either edit that file or supply values to *make*, e.g. for Suse Linux:

 make MANDIR=/usr/local/man install

Alternatively for Suse, create the symbolic link /usr/local/share/man -> ../man.
The defaults in "config.mak" are fine for Red Hat systems (tested under Fedora).
They are also fine for Debian systems (tested under Ubuntu 18.04).
Slackware systems install the same as Suse, or use the SlackBuild inside
https://github.com/duncan-roe/SlackBuilds/archive/v2/SlackBuilds-2.tar.gz,
which may eventually migrate to https://slackbuilds.org/.

Additionally, items listed under the Features heading may be changed at (q) run
time by environment variables which are the item name prepended by Q_, e.g.

  export Q_HELP_CMD="less -X"

MACRO_DIR is treated specially in this regard: if it's the same as HELP_DIR then
it will stay the same as HELP_DIR when Q_HELP_DIR is in the environment but
Q_MACRO_DIR isn't.

Q's macro debugger requires that q is compiled with debug and not stripped.

Q builds under Linux, OpenBSD and Cygwin.

Q requires GNU make and gcc to build. Given these criteria, Q should build under
any POSIX-compliant system.

OpenBSD comes with gcc. "pkg_add gmake" will fetch GNU make. "pkg_add expect" if
planning to use the macro debugger. "gmake install" will by default create
/usr/local/share/man and /usr/local/etc. To avoid creating these dirs, use
"gmake MANDIR=/usr/share/man SYSCONFDIR=/etc install", or edit config.mak.
Also insert CFLAGS=-O2 if desired.

The author hasn't had access to other formerly-supported platforms for a while
to test Q. Other compilers may be OK absent gcc: the code tries not to use gcc
extensions but it does use a pragma to turn off optimising in places, so best
not turn it on for other compilers. Non-ANSI compilers are no longer supported.
